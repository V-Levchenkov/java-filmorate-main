CREATE TABLE IF NOT EXISTS USERS (
    USER_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_EMAIL VARCHAR(255) NOT NULL,
    USER_LOGIN VARCHAR(255) NOT NULL,
    USER_NAME VARCHAR(255),
    BIRTHDATE DATE
);

CREATE TABLE IF NOT EXISTS MPA_RATING (
    RATING_ID INT PRIMARY KEY,
    RATING_VALUE VARCHAR(5)
);

CREATE TABLE IF NOT EXISTS FILMS (
    FILM_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    RELEASE_DATE DATE,
    DURATION INT,
    MPA_RATING_ID INT,
    CONSTRAINT fk_mpa_rating_rating_id FOREIGN KEY (MPA_RATING_ID) REFERENCES MPA_RATING (RATING_ID)
);

CREATE TABLE IF NOT EXISTS GENRES (
    GENRE_ID INT PRIMARY KEY,
    GENRE VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
    FILM_ID INT NOT NULL,
    GENRE_ID INT NOT NULL,
    PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT fk_film_genre_film_id FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    CONSTRAINT fk_film_genre_genre_id FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FILM_LIKES (
    FILM_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT fk_film_likes_film_id FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    CONSTRAINT fk_film_likes_user_id FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS USER_FRIENDS (
    USER_ID INT NOT NULL,
    FRIEND_ID INT NOT NULL,
    PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT fk_users_friends_user_id FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);